function solution(dartResult) {
    let answer = 0;
    let numTable = [0,1,2,3,4,5,6,7,8,9,10];
    
    let firstShot = [];
    let secondShot = [];
    let thirdShot = [];
    
    // 배열로 접근해보자 
    
    for(let i = 0; i < dartResult.length; i ++) {  
    }
    
    return answer;
}



/*

1. 3번의 다트점수를 담을 3개의 변수를 선언 (배열)
2. 문자열을 하나씩 조회해본다.
3. 조회한 문자열을 하나씩 변수에 담아주자
4. 다음번 숫자형 문자열이 조회될 경우, 그 다음 변수에 담아주자
4-1. *이 나올 경우, 해당 변수와 그 전 변수에 2로 바꿔서 넣어주자.  
4-2. #이 나올 경우, 해당 변수에 -1을 넣어주자

5. first = ['1','S','2','2'], second = ['2','T','*'], third = ['3','S']
6. return first + second+ third

['1','S','*','*'] ['2','T','*'] ['3','S']

Single(S), Double(D), Triple(T) 영역 => 1제곱, 2제곱, 3제곱 , 점수마다 하나씩 존재 

스타상(*): 해당 점수와 바로 전에 얻은 점수를 2배로 만들어준다. 다른  스타상 효과, 아차상 효과와 중첩 시 -2배 점수
아차상(#): 해당 점수 마이너스

점수마다 둘 중 하나만 존재할 수 있으며, 존재하지 않을 수  있음.

S: 1승
D: 제곱
T: 3승

*: 해당 점수와 바로 전에 얻은 점수를 2배로 만듦
#: 해당 점수 -1 곱해주기

숫자로 끊어주자. 
그리고 계산 

1S* 2T* 3S

let regex= /[0-9]/g => 문자열에서 숫자만 지정한다.

split(regex)

*/